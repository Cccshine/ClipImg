!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("CImage",[],t):"object"==typeof exports?exports.CImage=t():e.CImage=t()}(window,function(){return function(e){var t=window.webpackHotUpdateCImage;window.webpackHotUpdateCImage=function(e,i){!function(e,t){if(!b[e]||!y[e])return;for(var i in y[e]=!1,t)Object.prototype.hasOwnProperty.call(t,i)&&(u[i]=t[i]);0==--g&&0===v&&S()}(e,i),t&&t(e,i)};var i,o=!0,s="ba0874df0a15425933e3",n=1e4,a={},r=[],h=[];function l(e){var t=B[e];if(!t)return E;var o=function(o){return t.hot.active?(B[o]?B[o].parents.includes(e)||B[o].parents.push(e):(r=[e],i=o),t.children.includes(o)||t.children.push(o)):(console.warn("[HMR] unexpected require("+o+") from disposed module "+e),r=[]),E(o)},s=function(e){return{configurable:!0,enumerable:!0,get:function(){return E[e]},set:function(t){E[e]=t}}};for(var n in E)Object.prototype.hasOwnProperty.call(E,n)&&"e"!==n&&Object.defineProperty(o,n,s(n));return o.e=function(e){return"ready"===d&&c("prepare"),v++,E.e(e).then(t,function(e){throw t(),e});function t(){v--,"prepare"===d&&(w[e]||x(e),0===v&&0===g&&S())}},o}var p=[],d="idle";function c(e){d=e;for(var t=0;t<p.length;t++)p[t].call(null,e)}var f,u,m,g=0,v=0,w={},y={},b={};function X(e){return+e+""===e?+e:e}function Y(e){if("idle"!==d)throw new Error("check() is only allowed in idle status");return o=e,c("check"),(t=n,t=t||1e4,new Promise(function(e,i){if("undefined"==typeof XMLHttpRequest)return i(new Error("No browser support"));try{var o=new XMLHttpRequest,n=E.p+""+s+".hot-update.json";o.open("GET",n,!0),o.timeout=t,o.send(null)}catch(e){return i(e)}o.onreadystatechange=function(){if(4===o.readyState)if(0===o.status)i(new Error("Manifest request to "+n+" timed out."));else if(404===o.status)e();else if(200!==o.status&&304!==o.status)i(new Error("Manifest request to "+n+" failed."));else{try{var t=JSON.parse(o.responseText)}catch(e){return void i(e)}e(t)}}})).then(function(e){if(!e)return c("idle"),null;y={},w={},b=e.c,m=e.h,c("prepare");var t=new Promise(function(e,t){f={resolve:e,reject:t}});u={};return x(0),"prepare"===d&&0===v&&0===g&&S(),t});var t}function x(e){b[e]?(y[e]=!0,g++,function(e){var t=document.getElementsByTagName("head")[0],i=document.createElement("script");i.charset="utf-8",i.src=E.p+""+e+"."+s+".hot-update.js",t.appendChild(i)}(e)):w[e]=!0}function S(){c("ready");var e=f;if(f=null,e)if(o)Promise.resolve().then(function(){return z(o)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var i in u)Object.prototype.hasOwnProperty.call(u,i)&&t.push(X(i));e.resolve(t)}}function z(t){if("ready"!==d)throw new Error("apply() is only allowed in ready status");var i,o,n,h,l;function p(e){for(var t=[e],i={},o=t.slice().map(function(e){return{chain:[e],id:e}});o.length>0;){var s=o.pop(),n=s.id,a=s.chain;if((h=B[n])&&!h.hot._selfAccepted){if(h.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:n};if(h.hot._main)return{type:"unaccepted",chain:a,moduleId:n};for(var r=0;r<h.parents.length;r++){var l=h.parents[r],p=B[l];if(p){if(p.hot._declinedDependencies[n])return{type:"declined",chain:a.concat([l]),moduleId:n,parentId:l};t.includes(l)||(p.hot._acceptedDependencies[n]?(i[l]||(i[l]=[]),f(i[l],[n])):(delete i[l],t.push(l),o.push({chain:a.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:i}}function f(e,t){for(var i=0;i<t.length;i++){var o=t[i];e.includes(o)||e.push(o)}}t=t||{};var g={},v=[],w={},y=function(){console.warn("[HMR] unexpected require("+x.moduleId+") to disposed module")};for(var Y in u)if(Object.prototype.hasOwnProperty.call(u,Y)){var x;l=X(Y);var S=!1,z=!1,P=!1,k="";switch((x=u[Y]?p(l):{type:"disposed",moduleId:Y}).chain&&(k="\nUpdate propagation: "+x.chain.join(" -> ")),x.type){case"self-declined":t.onDeclined&&t.onDeclined(x),t.ignoreDeclined||(S=new Error("Aborted because of self decline: "+x.moduleId+k));break;case"declined":t.onDeclined&&t.onDeclined(x),t.ignoreDeclined||(S=new Error("Aborted because of declined dependency: "+x.moduleId+" in "+x.parentId+k));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(x),t.ignoreUnaccepted||(S=new Error("Aborted because "+l+" is not accepted"+k));break;case"accepted":t.onAccepted&&t.onAccepted(x),z=!0;break;case"disposed":t.onDisposed&&t.onDisposed(x),P=!0;break;default:throw new Error("Unexception type "+x.type)}if(S)return c("abort"),Promise.reject(S);if(z)for(l in w[l]=u[l],f(v,x.outdatedModules),x.outdatedDependencies)Object.prototype.hasOwnProperty.call(x.outdatedDependencies,l)&&(g[l]||(g[l]=[]),f(g[l],x.outdatedDependencies[l]));P&&(f(v,[x.moduleId]),w[l]=y)}var H,M=[];for(o=0;o<v.length;o++)l=v[o],B[l]&&B[l].hot._selfAccepted&&M.push({module:l,errorHandler:B[l].hot._selfAccepted});c("dispose"),Object.keys(b).forEach(function(e){!1===b[e]&&function(e){delete installedChunks[e]}(e)});for(var O,C,D=v.slice();D.length>0;)if(l=D.pop(),h=B[l]){var L={},j=h.hot._disposeHandlers;for(n=0;n<j.length;n++)(i=j[n])(L);for(a[l]=L,h.hot.active=!1,delete B[l],delete g[l],n=0;n<h.children.length;n++){var _=B[h.children[n]];_&&((H=_.parents.indexOf(l))>=0&&_.parents.splice(H,1))}}for(l in g)if(Object.prototype.hasOwnProperty.call(g,l)&&(h=B[l]))for(C=g[l],n=0;n<C.length;n++)O=C[n],(H=h.children.indexOf(O))>=0&&h.children.splice(H,1);for(l in c("apply"),s=m,w)Object.prototype.hasOwnProperty.call(w,l)&&(e[l]=w[l]);var W=null;for(l in g)if(Object.prototype.hasOwnProperty.call(g,l)&&(h=B[l])){C=g[l];var I=[];for(o=0;o<C.length;o++)if(O=C[o],i=h.hot._acceptedDependencies[O]){if(I.includes(i))continue;I.push(i)}for(o=0;o<I.length;o++){i=I[o];try{i(C)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:l,dependencyId:C[o],error:e}),t.ignoreErrored||W||(W=e)}}}for(o=0;o<M.length;o++){var R=M[o];l=R.module,r=[l];try{E(l)}catch(e){if("function"==typeof R.errorHandler)try{R.errorHandler(e)}catch(i){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:l,error:i,originalError:e}),t.ignoreErrored||W||(W=i),W||(W=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:l,error:e}),t.ignoreErrored||W||(W=e)}}return W?(c("fail"),Promise.reject(W)):(c("idle"),new Promise(function(e){e(v)}))}var B={};function E(t){if(B[t])return B[t].exports;var o=B[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:i!==e,active:!0,accept:function(e,i){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var o=0;o<e.length;o++)t._acceptedDependencies[e[o]]=i||function(){};else t._acceptedDependencies[e]=i||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var i=0;i<e.length;i++)t._declinedDependencies[e[i]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var i=t._disposeHandlers.indexOf(e);i>=0&&t._disposeHandlers.splice(i,1)},check:Y,apply:z,status:function(e){if(!e)return d;p.push(e)},addStatusHandler:function(e){p.push(e)},removeStatusHandler:function(e){var t=p.indexOf(e);t>=0&&p.splice(t,1)},data:a[e]};return i=void 0,t}(t),parents:(h=r,r=[],h),children:[]};return e[t].call(o.exports,o,o.exports,l(t)),o.l=!0,o.exports}return E.m=e,E.c=B,E.d=function(e,t,i){E.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},E.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},E.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return E.d(t,"a",t),t},E.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},E.p="/dist/",E.h=function(){return s},l(0)(E.s=0)}({0:function(e,t,i){"use strict";var o=function(){function e(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,i,o){return i&&e(t.prototype,i),o&&e(t,o),t}}();i(5);var s=function(){function e(t){var i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.isMobile=/mobile/i.test(window.navigator.userAgent),this.isMobile&&console.log("Mobile");var o={element:document.getElementById("cimage"),allowNewSelect:!0,allowMove:!0,allowResize:!0,bgColor:"#000",bgOpacity:.6,borderOpacity:.4,handleOpacity:.5,handleSize:5,aspectRatio:null,hasPreview:!0,previewSize:[200],createHandles:["n","e","s","w","ne","se","sw","nw"],createBorders:["n","e","s","w"],drawBorders:!0,minSize:[0,0],maxSize:[0,0],onChange:function(){},onSelect:function(){},onRelease:function(){}};for(var s in o)o.hasOwnProperty(s)&&!t.hasOwnProperty(s)&&(t[s]=o[s]);this.options=t,this.disable=!1,this.parentElement=this.options.element.parentNode,this.eleOriginId=this.options.element.getAttribute("id"),this.eleOriginHTML=this.options.element.outerHTML;var n='<div class="cimage-main">\n\t\t\t\t\t\t\t'+this.eleOriginHTML+'\n\t\t\t\t\t\t\t<div class="cimage-box" style="z-index:100;">\n\t\t\t\t\t\t\t    <div class="cimage-border" style="z-index:-1;"></div>\n\t\t\t\t\t\t\t    <div class="cimage-handle"></div>\n\t\t\t\t\t\t\t    <div class="cimage-handle"></div>\n\t\t\t\t\t\t\t    <div class="cimage-handle"></div>\n\t\t\t\t\t\t\t    <div class="cimage-handle"></div>\n\t\t\t\t\t\t\t    <div class="cimage-handle"></div>\n\t\t\t\t\t\t\t    <div class="cimage-handle"></div>\n\t\t\t\t\t\t\t    <div class="cimage-handle"></div>\n\t\t\t\t\t\t\t    <div class="cimage-handle"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="cimage-shadow"></div>\n\t\t\t\t\t\t\t<div class="cimage-shadow"></div>\n\t\t\t\t\t\t\t<div class="cimage-shadow"></div>\n\t\t\t\t\t\t\t<div class="cimage-shadow"></div>\n\t\t\t\t\t\t</div>';if(this.options.hasPreview&&this.options.aspectRatio)for(var a=0;a<this.options.previewSize.length;a++)n+='<div class="cimage-preview-box">\n\t\t\t\t\t\t\t <img class="cimage-preview" src="" alt="preview">\n\t\t\t\t\t\t   </div>';this.options.element.outerHTML=n,console.log(this.eleOriginId),this.options.element=document.getElementById(this.eleOriginId),this.wrapElement=this.options.element.parentNode,console.log(this.options.element,this.options.element),this.clipBox=this.wrapElement.getElementsByClassName("cimage-box")[0],this.previewBoxs=document.getElementsByClassName("cimage-preview-box"),this.previews=document.getElementsByClassName("cimage-preview"),console.log(this.options.element.offsetWidth),this.setPos(this.wrapElement,{width:this.options.element.offsetWidth,height:this.options.element.offsetHeight}),console.log(this.options.element.offsetWidth),this.setReset();var r=function(e,t,o,s,n,a,r){return function(h){var l={X:h.pageX-e.X,Y:h.pageY-e.Y},p=!!s&&!(Math.abs(l.X)/Math.abs(l.Y)<s),d={X:s?n?a.X:p?Math.abs(l.X):Math.abs(l.Y)*s:Math.abs(l.X),Y:s?n?a.Y:p?Math.abs(l.X)/s:Math.abs(l.Y):Math.abs(l.Y)};i.options.maxSize[0]&&d.X>i.options.maxSize[0]&&(d.X=i.options.maxSize[0],s&&(d.Y=d.X/s)),i.options.maxSize[1]&&d.Y>i.options.maxSize[1]&&(d.Y=i.options.maxSize[1],s&&(d.X=d.Y*s));var c={X:l.X>0?o.X+d.X:o.X-d.X,Y:l.Y>0?o.Y+d.Y:o.Y-d.Y};0<c.X&&c.X<t.width&&0<c.Y&&c.Y<t.height&&(n=!!s&&null,r=[]),c.Y<0&&(r.includes("top")||r.push("top")),c.X>t.width&&(r.includes("right")||r.push("right")),c.X<0&&(r.includes("left")||r.push("left")),c.Y>t.height&&(r.includes("bottom")||r.push("bottom"));for(var f=0;f<r.length;f++)switch(r[f]){case"top":d.Y=o.Y,c.Y=0,s&&(d.X=d.Y*s,n=!0);break;case"right":d.X=t.width-o.X,s&&(d.Y=d.X/s,n=!0);break;case"bottom":d.Y=t.height-o.Y,s&&(d.X=d.Y*s,n=!0);break;case"left":d.X=o.X,c.X=0,s&&(d.Y=d.X/s,n=!0)}a={X:d.X,Y:d.Y},Math.abs(l.X)<d.X&&Math.abs(l.Y)<d.Y&&(n=!!s&&null,r=[]),i.setPos(i.clipBox,{left:l.X>0?o.X:c.X,width:d.X}),i.setPos(i.clipBox,{top:l.Y>0?o.Y:c.Y,height:d.Y}),i.setBorders(),i.setShadows(),i.setPreview(),h.preventDefault(),i.options.onChange&&i.options.onChange()}};this.options.element.onmousedown=function(e){if(!i.disable){var t={X:e.pageX,Y:e.pageY},o={width:i.options.element.offsetWidth,height:i.options.element.offsetHeight,left:i.getDocPos(i.options.element).left,top:i.getDocPos(i.options.element).top},s={X:t.X-o.left,Y:t.Y-o.top},n=i.options.aspectRatio,a=r(t,o,s,n,null,null,[]);document.addEventListener("mousemove",a,!1);var h=i;document.addEventListener("mouseup",function e(){h.clipBox.offsetWidth>0&&h.clipBox.offsetHeight>0&&(h.options.minSize[0]&&h.clipBox.offsetWidth<h.options.minSize[0]||h.options.minSize[1]&&h.clipBox.offsetHeight<h.options.minSize[1]?(h.setReset(),h.options.onRelease&&h.options.onRelease()):(h.setHandles(),h.isFunction(h.options.onSelect)&&h.options.onSelect())),document.removeEventListener("mousemove",a,!1),document.removeEventListener("mouseup",e,!1)},!1)}};this.clipBox.addEventListener("mousedown",function(e){if(!i.disable&&i.options.allowMove&&!e.target.className.includes("cimage-handle")){var t=function(e){return function(t){var o=t.pageX-e.X,s=t.pageY-e.Y;o<=0?o=0:o>=i.options.element.offsetWidth-i.clipBox.offsetWidth&&(o=i.options.element.offsetWidth-i.clipBox.offsetWidth),s<=0?s=0:s>=i.options.element.offsetHeight-i.clipBox.offsetHeight&&(s=i.options.element.offsetHeight-i.clipBox.offsetHeight),i.setPos(i.clipBox,{left:o,top:s}),i.setShadows(),i.setPreview(),t.preventDefault(),i.options.onChange&&i.options.onChange()}}({X:e.pageX-i.clipBox.offsetLeft,Y:e.pageY-i.clipBox.offsetTop});document.addEventListener("mousemove",t,!1);document.addEventListener("mouseup",function e(){document.removeEventListener("mousemove",t,!1),document.removeEventListener("mouseup",e,!1)},!1)}},!1);this.clipBox.addEventListener("mousedown",function(e){if(i.disable||!i.options.allowResize||!e.target.className.includes("cimage-handle"))return!1;var t={X:e.pageX,Y:e.pageY},o={X:0,Y:0},s=i.getStyle(e.target,"cursor"),n=i.options.aspectRatio,a={width:i.options.element.offsetWidth,height:i.options.element.offsetHeight,left:i.getDocPos(i.options.element).left,top:i.getDocPos(i.options.element).top},r={width:i.clipBox.offsetWidth,height:i.clipBox.offsetHeight,left:i.clipBox.offsetLeft,top:i.clipBox.offsetTop};switch(s){case"nw-resize":t={X:e.pageX+r.width,Y:e.pageY+r.height},o={X:r.left+r.width,Y:r.top+r.height};break;case"ne-resize":t={X:e.pageX-r.width,Y:e.pageY+r.height},o={X:r.left,Y:r.top+r.height};break;case"sw-resize":t={X:e.pageX+r.width,Y:e.pageY-r.height},o={X:r.left+r.width,Y:r.top};break;case"se-resize":t={X:e.pageX-r.width,Y:e.pageY-r.height},o={X:r.left,Y:r.top};break;case"n-resize":t={X:e.pageX-r.width/2,Y:e.pageY+r.height},o={X:r.left,Y:r.top+r.height};break;case"e-resize":t={X:e.pageX-r.width,Y:e.pageY-r.height/2},o={X:r.left,Y:r.top};break;case"s-resize":t={X:e.pageX-r.width/2,Y:e.pageY-r.height},o={X:r.left,Y:r.top};break;case"w-resize":t={X:e.pageX+r.width,Y:e.pageY-r.height/2},o={X:r.left+r.width,Y:r.top};break;default:t={X:e.pageX,Y:e.pageY},o={X:r.left,Y:r.top}}var h=function(e,t,o,s,n,a,r,h,l){return function(p){var d={X:p.pageX-e.X,Y:p.pageY-e.Y},c=null,f=null;o.match(/nw|sw|se|ne/)?(c=!(!s||Math.abs(d.X)/Math.abs(d.Y)<s),f={X:s?r?h.X:c?Math.abs(d.X):Math.abs(d.Y)*s:Math.abs(d.X),Y:s?r?h.Y:c?Math.abs(d.X)/s:Math.abs(d.Y):Math.abs(d.Y)}):(c=!!s&&("w-resize"==o||"e-resize"==o),f={X:r?h.X:c?Math.abs(d.X):s?Math.abs(d.Y)*s:t.width,Y:r?h.Y:c?s?Math.abs(d.X)/s:t.height:Math.abs(d.Y)}),i.options.minSize[0]&&f.X<i.options.minSize[0]&&(f.X=i.options.minSize[0],s&&(f.Y=f.X/s)),i.options.minSize[1]&&f.Y<i.options.minSize[1]&&(f.Y=i.options.minSize[1],s&&(f.X=f.Y*s),i.options.minSize[0]&&f.X<i.options.minSize[0]&&(f.X=i.options.minSize[0],s&&(f.Y=f.X/s))),i.options.maxSize[0]&&f.X>i.options.maxSize[0]&&(f.X=i.options.maxSize[0],s&&(f.Y=f.X/s)),i.options.maxSize[1]&&f.Y>i.options.maxSize[1]&&(f.Y=i.options.maxSize[1],s&&(f.X=f.Y*s),i.options.maxSize[0]&&f.X>i.options.maxSize[0]&&(f.X=i.options.maxSize[0],s&&(f.Y=f.X/s)));var u={X:d.X>0?n.X+f.X:n.X-f.X,Y:d.Y>0?n.Y+f.Y:n.Y-f.Y};0<u.X&&u.X<a.width&&0<u.Y&&u.Y<a.height&&(r=!!s&&null,l=[]),u.Y<0&&(l.includes("top")||l.push("top")),u.X>a.width&&(l.includes("right")||l.push("right")),u.X<0&&(l.includes("left")||l.push("left")),u.Y>a.height&&(l.includes("bottom")||l.push("bottom"));for(var m=0;m<l.length;m++)switch(l[m]){case"top":f.Y=n.Y,u.Y=0,s&&(f.X=f.Y*s,r=!0);break;case"right":f.X=a.width-n.X,s&&(f.Y=f.X/s,r=!0);break;case"bottom":f.Y=a.height-n.Y,s&&(f.X=f.Y*s,r=!0);break;case"left":f.X=n.X,u.X=0,s&&(f.Y=f.X/s,r=!0)}h={X:f.X,Y:f.Y},Math.abs(d.X)<f.X&&Math.abs(d.Y)<f.Y&&(r=!!s&&null,l=[]),i.setPos(i.clipBox,{left:d.X>0?n.X:u.X,width:f.X}),i.setPos(i.clipBox,{top:d.Y>0?n.Y:u.Y,height:f.Y}),i.setBorders(),i.setHandles(),i.setShadows(),i.setPreview(),p.preventDefault(),i.options.onChange&&i.options.onChange()}}(t,r,s,n,o,a,null,{top:0,left:0,width:0,height:0},[]);document.addEventListener("mousemove",h,!1);var l=i;document.addEventListener("mouseup",function e(){l.setHandles(),document.removeEventListener("mousemove",h,!1),document.removeEventListener("mouseup",e,!1)},!1)},!1);for(var h=this.wrapElement.getElementsByClassName("cimage-shadow"),l=0;l<h.length;l++)h[l].onmousedown=function(e){if(!i.disable&&i.options.allowNewSelect){var t={width:i.options.element.offsetWidth,height:i.options.element.offsetHeight,left:i.getDocPos(i.options.element).left,top:i.getDocPos(i.options.element).top};i.setReset(),h[0].style.display="block",i.setPos(h[0],{width:t.width,height:t.height,top:0,left:0});var o={X:e.pageX,Y:e.pageY},s={X:o.X-t.left,Y:o.Y-t.top},n=i.options.aspectRatio,a=r(o,t,s,n,null,null,[]);document.addEventListener("mousemove",a,!1);var l=i;document.addEventListener("mouseup",function e(){l.clipBox.offsetWidth<=0&&l.clipBox.offsetHeight<=0||l.options.minSize[0]&&l.clipBox.offsetWidth<l.options.minSize[0]||l.options.minSize[1]&&l.clipBox.offsetHeight<l.options.minSize[1]?(l.setReset(),l.options.onRelease&&l.options.onRelease()):(l.setHandles(),this.isFunction(l.options.onSelect)&&l.options.onSelect()),document.removeEventListener("mousemove",a,!1),document.removeEventListener("mouseup",e,!1)},!1)}};console.log(this.options.element.offsetWidth)}return o(e,[{key:"setImage",value:function(e,t){this.disable||(this.options.element.src=e,this.isFunction(t)&&t())}},{key:"setOptions",value:function(e){if(!this.disable)for(var t in this.options)this.options.hasOwnProperty(t)&&!e.hasOwnProperty(t)&&(e[t]=this.options[t])}},{key:"setSelect",value:function(e){if(!this.disable){var t=this.options.aspectRatio,i=Math.abs(e.x2-e.x1),o=t?i/t:Math.abs(e.y2-e.y1),s=e.y1,n=e.x1;e.x1<0||e.x2<0||e.y2<0||e.y1<0||e.x1>this.element.offsetWidth||e.x2>this.element.offsetWidth||e.y1>this.element.offsetHeight||e.y2>this.element.offsetHeight?alert("参数超出范围"):this.options.minSize[0]&&i<this.options.minSize[0]||this.options.minSize[1]&&o<this.options.minSize[1]?alert("设置的宽度或高度小于设置的最小值"):this.options.maxSize[0]&&i>this.options.maxSize[0]||this.options.maxSize[1]&&o>this.options.maxSize[1]?alert("设置的宽度或高度大于设置的最大值"):(e.x2<e.x1&&(n=e.x2),e.y2<e.y1&&(s=e.y2),this.setPos(this.clipBox,{width:i,height:o,left:n,top:s}),this.setBorders(),this.setShadows(),this.setHandles(),this.isFunction(this.options.onSelect)&&this.options.onSelect())}}},{key:"getSelectInfo",value:function(){var e=this.clipBox.offsetWidth,t=this.clipBox.offsetHeight,i=this.clipBox.offsetLeft,o=this.clipBox.offsetTop;return{x1:i,y1:o,x2:i+e,y2:o+t,width:e,height:t}}},{key:"release",value:function(){this.disable||this.setReset()}},{key:"destroy",value:function(){this.disable||this.parentElement&&(this.parentElement.removeChild(this.wrapElement),this.parentElement.innerHTML=this.eleOriginHTML)}},{key:"disable",value:function(){this.disable||(this.disable=!0)}},{key:"enable",value:function(){this.disable&&(this.disable=!1)}},{key:"setBorders",value:function(){var e=this.options.createBorders,t=this.wrapElement.getElementsByClassName("cimage-border")[0];if(this.options.drawBorders&&this.isArray(e)){t.style.display="block";for(var i=0;i<e.length;i++)switch(e[i]){case"n":this.addClass(t,"bd-top");break;case"e":this.addClass(t,"bd-right");break;case"s":this.addClass(t,"bd-bottom");break;case"w":this.addClass(t,"bd-left")}t.style.opacity=this.options.borderOpacity,t.style.boxSizing="border-box";var o={width:this.clipBox.offsetWidth,height:this.clipBox.offsetHeight};this.setPos(t,{width:o.width,height:o.height})}}},{key:"setHandles",value:function(){var e=this.options.createHandles;if(this.isArray(e))for(var t=this.wrapElement.getElementsByClassName("cimage-handle"),i={width:this.clipBox.offsetWidth,height:this.clipBox.offsetHeight},o=0;o<e.length;o++)switch(t[o].style.display="block",t[o].style.opacity=this.handleOpacity,this.setPos(t[o],{width:this.options.handleSize,height:this.options.handleSize}),e[o]){case"n":this.addClass(t[o],"hd-n"),this.setPos(t[o],{left:(i.width-this.options.handleSize)/2,top:-this.options.handleSize/2});break;case"e":this.addClass(t[o],"hd-e"),this.setPos(t[o],{right:-this.options.handleSize/2,top:(i.height-this.options.handleSize)/2});break;case"s":this.addClass(t[o],"hd-s"),this.setPos(t[o],{left:(i.width-this.options.handleSize)/2,bottom:-this.options.handleSize/2});break;case"w":this.addClass(t[o],"hd-w"),this.setPos(t[o],{left:-this.options.handleSize/2,top:(i.height-this.options.handleSize)/2});break;case"ne":this.addClass(t[o],"hd-ne"),this.setPos(t[o],{right:-this.options.handleSize/2,top:-this.options.handleSize/2});break;case"se":this.addClass(t[o],"hd-se"),this.setPos(t[o],{right:-this.options.handleSize/2,bottom:-this.options.handleSize/2});break;case"sw":this.addClass(t[o],"hd-sw"),this.setPos(t[o],{left:-this.options.handleSize/2,bottom:-this.options.handleSize/2});break;case"nw":this.addClass(t[o],"hd-nw"),this.setPos(t[o],{left:-this.options.handleSize/2,top:-this.options.handleSize/2})}}},{key:"setShadows",value:function(){for(var e=this.wrapElement.getElementsByClassName("cimage-shadow"),t={width:this.options.element.offsetWidth,height:this.options.element.offsetHeight},i={width:this.clipBox.offsetWidth,height:this.clipBox.offsetHeight,left:this.clipBox.offsetLeft,top:this.clipBox.offsetTop},o=0;o<e.length;o++)e[o].style.display="block",e[o].style.backgroundColor=this.options.bgColor,e[o].style.opacity=this.options.bgOpacity;this.setPos(e[0],{width:i.width,height:i.top,top:0,left:i.left}),this.setPos(e[1],{width:t.width-i.left-i.width,height:t.height,top:0,right:0}),this.setPos(e[2],{width:i.width,height:t.height-i.top-i.height,bottom:0,left:i.left}),this.setPos(e[3],{width:i.left,height:t.height,top:0,left:0})}},{key:"setPreview",value:function(){if(this.options.hasPreview&&this.options.aspectRatio)for(var e=0;e<this.options.previewSize.length;e++){this.setPos(this.previewBoxs[e],{width:this.options.previewSize[e],height:Math.round(this.options.previewSize[e]/this.options.aspectRatio)});var t=this.previewBoxs[e].offsetWidth/this.clipBox.offsetWidth,i="rect("+this.clipBox.offsetTop*t+"px "+(this.clipBox.offsetLeft+this.clipBox.offsetWidth)*t+"px "+(this.clipBox.offsetTop+this.clipBox.offsetHeight)*t+"px "+this.clipBox.offsetLeft*t+"px)";this.previews[e].style.clip=i,this.setPos(this.previews[e],{top:-this.clipBox.offsetTop*t,left:-this.clipBox.offsetLeft*t,width:this.options.element.offsetWidth*t,height:this.options.element.offsetHeight*t})}}},{key:"setReset",value:function(){for(var e=this.wrapElement.getElementsByClassName("cimage-shadow"),t=this.wrapElement.getElementsByClassName("cimage-handle"),i=0;i<e.length;i++)this.setPos(e[i],{width:0,height:0}),e[i].style.display="none";for(var o=0;o<t.length;o++)t[o].style.display="none";if(this.wrapElement.getElementsByClassName("cimage-border")[0].style.display="none",this.setPos(this.clipBox,{width:0,height:0,left:0,top:0}),this.options.hasPreview&&this.options.aspectRatio)for(var s=0;s<this.options.previewSize.length;s++){this.previews[s].src=this.options.element.src,this.setPos(this.previewBoxs[s],{width:this.options.previewSize[s],height:Math.round(this.options.previewSize[s]/this.options.aspectRatio)});var n="rect(0 "+this.previewBoxs[s].offsetWidth+"px "+this.previewBoxs[s].offsetHeight+"px 0)";this.previews[s].style.clip=n,this.setPos(this.previews[s],{top:0,left:0,width:this.options.element.offsetWidth,height:this.options.element.offsetHeight})}}},{key:"getDocPos",value:function(e){for(var t={left:0,top:0};e;)t.left+=e.offsetLeft,t.top+=e.offsetTop,e=e.offsetParent;return t}},{key:"isArray",value:function(e){return"[object Array]"==Object.prototype.toString.call(e)}},{key:"isFunction",value:function(e){return"[object Function]"==Object.prototype.toString.call(e)}},{key:"addClass",value:function(e,t){""==e.className?e.className=t:e.className.split(" ").includes(t)||(e.className+=" "+t)}},{key:"getStyle",value:function(e,t){return e.currentStyle?e.currentStyle[t]:getComputedStyle(e)[t]}},{key:"setPos",value:function(e,t){for(var i in t)e.style[i]=t[i]+"px"}}]),e}();e.exports=s},5:function(e,t){}})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,